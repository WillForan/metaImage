<div id="page">
      <div id="content">
	<% FOREACH pic IN pics %>
        <div>
	<form autocomplete="off" method="POST" action="./<%pic.md5sum%>">
          <h1>Edit</h1>

	  <div style="display:inline-block">
	   <input type="input" name="Tags" value="<%pic.Tags.join(',')%>"/><br />
	   <img  id="photo" src="/images/byhash/<% pic.md5sum %>.jpg" class="block" \> <br>
	   <div id="thumbnails">
           <div id="thumbnails-example" style="height:48px;width:36px;background-image:url('/images/byhash/<% pic.md5sum %>.jpg'); background-position: 0% 0%; background-size:300px auto; display:none"> </div>
	   </div>
	  </div>

	  <div style="display:inline-block">
	  Peps: <input type="input" name="Peps" value=""/><br />
	  Pos: <input type="input" name="Longitude" value="<%pic.Longitude%>"><input type="input" name="Latitude" value="<%pic.Latitude%>"  /><br />
	  <input type="submit" name="submit" value="submit"         /><br />
	  </div>
        </div>
	<div id="map" style="height:250px"></div>
	</form>
	<% END %>

      </div>
</div>

<div id="tagperson" style="padding: 0; position: absolute; display:none;">
 <div><img src="/images/circle.sm.png" / > </div>
 <div class="popup" style="background:white;">
  <a class="removeparent" href="#" style="float:right"> dont tag </a>
  <form autocomplete="off" action="/add/person" method="post">
   <input type=hidden name=x /><input type=hidden name=y />
   <input type=text name=Name  /> 
   <div class="addperson" style="display:hidden"> <input type=text name=Email value="email@address" /> <input type=submit value="add and tag"></div>
  </form>
 </div>
</div>

<script src="/javascripts/OpenLayers.js"></script>
<script src="/javascripts/tag-input/jquery.tagsinput.js"></script>
<script>
/* MAP */
//http://gis.stackexchange.com/questions/39055/how-to-get-the-lat-long-of-a-clicked-location-using-leaflet-api
//http://wiki.openstreetmap.org/wiki/OpenLayers_Simple_Example
/*
map = new OpenLayers.Map("map");
map.addLayer(new OpenLayers.Layer.OSM());
GPSproj = new OpenLayers.Projection("EPSG:4326");   // Transform from WGS 1984
DISPproj = map.getProjectionObject();

long=$('input[name=Longitude]').val();
lat= $('input[name=Latitude]').val();
if(isNaN(lat*long)) {
  map.zoomToMaxExtent();
}else{
  center=new OpenLayers.LonLat(long,lat).transform( GPSproj, DISPproj); //from gps to display
  map.setCenter(center, 15 );
  
  var markers = new OpenLayers.Layer.Markers( "Markers" );
  map.addLayer(markers);
  markers.addMarker(new OpenLayers.Marker(center));
}


map.events.register("click", map, function(e) {
	var position = map.getLonLatFromPixel(e.xy).transform(DISPproj, GPSproj);
	$('input[name=Latitude]').val(position.lat );
	$('input[name=Longitude]').val(position.lon );
	});
*/
/* Image TAG */
// grab tagperson hidden stuff (div form and hider)
var $inputdiv=$('#tagperson')
$inputdiv.find('.addperson').hide()
var $inputbox= $inputdiv.find('input[name=Name]')

// create json object like [ {Name: .., Email: .., x: .., y: ...}, .. ]
// do this by going through each thumb and building object from hidden fields
// if i'd know about .serialize(), this might look different
function collectThumbs() {
 var pepTags = [];
 $('#thumbnails').children('div.thumbnail').each(function(i,e){
  var o={};
  $(e).find('input[type=hidden]').each(function(j,fld){ o[$(fld).attr('name')] = $(fld).val() })
  pepTags.push(o);
 })
//TODO: send pepTags to perl
//http://stackoverflow.com/questions/14042330/dancer-how-to-share-data-and-waiting-response-between-2-post-without-blocking
}

function addThumb($form){
   name=$form.find('input[name=Name]').val()
   email=$form.find('input[name=Email]').val()
   x=$form.find('input[name=x]').val()
   y=$form.find('input[name=y]').val()

   // craete a thumbnail
   // also add hidden inputs for easy parsting later
   $('#thumbnails-example').clone().addClass('thumbnail').css({
                "background-position": x+"% "+y+"%",
                display: 'inline-block'}
       	  ).appendTo('#thumbnails').append(
	  '<input type=hidden name=Name value="'+name+
	  '" /> <input type=hidden name=Email value="'+email+
	  '" />').append($form.find('input[type=hidden]').clone() )

   // hide the add person dialog part
   $('div#tagperson').hide().find('.addperson').hide()
   // re-enable autocompleting user names.. just incase it was disabled
   $inputbox.autocomplete("enable")
}

/* ADD USER */
// allow text boxes to be destroyed, should be abstraced more
$(document).on('click','a.removeparent', function(et){ $(this).parent().parent().hide().find('.addperson').hide();$inputbox.autocomplete("enable") ; return false});

// submit new user with ajax if needed
$inputdiv.find('form').ajaxForm({ 
   success: function(response,status,xhr,$form){
    if(response.success==1){
      addThumb($form)
    } else {
      alert(response.response)
    }
   },
   error: function(e){ alert('database errore!'); console.log(e) }
 
 });
/* TAG USER */ 
// pull names as labels, email as actual value -- ajax from /people
$inputbox.autocomplete( {
 // sever is:
 source: "/people",
 // sever says:
 response: function(event,ui) {
    typed=$(this).val()
    // only offer to add if they aren't the same
    if( $.grep(ui.content,function(e){return e.label == typed}).length < 1 ) {
      ui.content.push( {label:'Add ' + typed, value: 'Add'} )
    }
  },
 //user says:
 select: function(event,ui){
   // if they click add, launch the add user stuff and disable this
   if(ui.item.value=='Add'){
     $(this).autocomplete("disable");
     $inputdiv.find('.addperson').show();
     return false;
   //otherwise precede to create the thumbnail based on the form we've created
   } else {
    addThumb($(this).parent('form'))
  }
 }
});
$inputbox.autocomplete("disable") // don't show at first


$('#photo').click(function(e){
  var image=$('#photo');
  var imageP=image.position();
  // get the percent of whole of the face location
  var x=Math.round( (e.pageX - imageP.left)/image.innerWidth()*100);
  var y=Math.round( (e.pageY - imageP.top) /image.innerHeight()*100);

  // offset by half the size of face overlay image (36x48)
  // and display it
  // the display has controls to remove itself when ready
  $inputdiv.find('input[name=x]').val(x);
  $inputdiv.find('input[name=y]').val(y);
  $inputdiv.css({left: e.pageX-18, top: e.pageY-24, display: 'block'}).show();
  $inputbox.autocomplete("enable")
  // change the x and y values

});


   

/* Tags */
//TODO why is it styled so ugly?
$('input[name=Tags]').tagsInput(
 {autocomplete_url:'/tags'}
);
</script>

